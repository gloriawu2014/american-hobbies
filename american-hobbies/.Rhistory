Justyce Williams <br>
Ben Snyderman <br>")
))
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
# changing variable names
table_map_data <- table_map_data |>
rename("Mean Leisure Time per Day (Minutes)" = mean_time,
"Mean Age (Years)" = mean_age,
"Mean Earnings per Week (USD)" = mean_earnings)
#| label: wrangling for map
## GLORIA - create states map dataset
states <- maps::map("state", plot = FALSE, fill = TRUE) |>
st_as_sf()
# CBSA to county code dataset
cbsa_fips <- read_csv("raw-data/cbsa2fipsxw.csv")
fips_states <- cbsa_fips |>
mutate(ID = str_to_lower(statename),
# cast to character to join with dataset
location = as.character(cbsacode)) |>
# only keep states (rather than counties), because there isn't
# enough data per county
select(location, ID) |>
# join with state data
inner_join(states)
# earnings data
table_map_data <- responder_info |>
# add state information
inner_join(fips_states) |>
inner_join(avg_time) |>
select(- TUCASEID, - TESEX, - location, - geom) |>
group_by(ID) |>
summarize(mean_age = mean(age),
mean_earnings = mean(earnings),
mean_time = mean(time)) |>
mutate(State = str_to_title(ID)) |>
select(State, mean_age, mean_earnings, mean_time) |>
# rounding digits to 2
dplyr::mutate(across(where(is.numeric), round, 2))
# create average time dataset
avg_time <- act |>
group_by(TUCASEID) |>
# sum time by person
summarize(total_time = sum(duration)) |>
inner_join(responder_info, by = "TUCASEID") |>
# join with map data
inner_join(fips_states) |>
# group by state
group_by(ID, geom) |>
# average time by location
summarize(time = mean(total_time)) |>
mutate(State = str_to_title(ID)) |>
# add earnings data
inner_join(table_map_data) |>
select(State, time, mean_age,
mean_earnings, geom) |>
# round digits to 2
dplyr::mutate(across(where(is.numeric), round, 2)) |>
# add tooltip text
mutate(text = paste(
"State: ", State,
"\n Mean Time: ", time,
"\n Mean Age: ", mean_age,
"\n Mean Earnings: ", mean_earnings,
sep = ""
))
# changing variable names
table_map_data <- table_map_data |>
rename("Mean Leisure Time per Day (Minutes)" = mean_time,
"Mean Age (Years)" = mean_age,
"Mean Earnings per Week (USD)" = mean_earnings)
#| label: save final objects
save(states, avg_time, fullfile, table_data, table_map_data, file = "american-hobbies/data/final_data.Rdata")
#| label: setup
#| include: FALSE
knitr::opts_chunk$set(
# display code as types
tidy = FALSE,
# slightly smaller code font
size = "small",
# do not display messages in PDF
message = FALSE,
# set default figure width and height
fig.width = 5, fig.height = 3)
# improve digit and NA display
options(scipen = 1, knitr.kable.NA = '')
# load packages
library(tidyverse)
library(ggplot2)
library(sf)
library(stringr)
library(robotstxt)
library(tidyr)
library(dplyr)
#| label: load & basic wrangling
## GLORIA
# check if we can scrape
paths_allowed("https://www.bls.gov/tus/data/datafiles-2023.htm")
paths_allowed("https://www.nber.org/research/data/census-core-based-statistical-area-cbsa-federal-information-processing-series-fips-county-crosswalk")
# make sure to set working directory to current file location
atusact_2023 <- read_csv("raw-data/atusact_2023.dat")
atussum_2023 <- read_csv("raw-data/atussum_2023.dat")
atuscps_2023 <- read_csv("raw-data/atuscps_2023.dat")
## basic wrangling
# only keep variables we want
act <- atusact_2023 |>
select(TUCASEID, TUACTDUR, TRCODE) |>
rename(duration = TUACTDUR,
activity = TRCODE) |>
# keep activity types starting with 12, 13, 15
# 12 = socializing, relaxing, leisure
# 13 = sports, exercise, recreation
# 15 = volunteer activities
# create boolean variable to see if it is one of these activities
mutate(bool_act = str_starts(activity, "12|13|15")) |>
# filter out all other activities
filter(bool_act == TRUE) |>
select(- bool_act)
sum <- atussum_2023 |>
select(TUCASEID, TEAGE, TESEX, TRERNWA) |>
rename(age = TEAGE,
earnings = TRERNWA) |>
filter(earnings != -1)
cps <- atuscps_2023 |>
select(TUCASEID, GTCBSA) |>
rename(location = GTCBSA)
# join responder data together (no activities)
responder_info <- sum |>
inner_join(cps, by = "TUCASEID")
#| label: wrangling for map
## GLORIA - create states map dataset
states <- maps::map("state", plot = FALSE, fill = TRUE) |>
st_as_sf()
# CBSA to county code dataset
cbsa_fips <- read_csv("raw-data/cbsa2fipsxw.csv")
fips_states <- cbsa_fips |>
mutate(ID = str_to_lower(statename),
# cast to character to join with dataset
location = as.character(cbsacode)) |>
# only keep states (rather than counties), because there isn't
# enough data per county
select(location, ID) |>
# join with state data
inner_join(states)
# earnings data
table_map_data <- responder_info |>
# add state information
inner_join(fips_states) |>
inner_join(avg_time) |>
select(- TUCASEID, - TESEX, - location, - geom) |>
group_by(ID) |>
summarize(mean_age = mean(age),
mean_earnings = mean(earnings),
mean_time = mean(time)) |>
mutate(State = str_to_title(ID)) |>
select(State, mean_age, mean_earnings, mean_time) |>
# rounding digits to 2
dplyr::mutate(across(where(is.numeric), round, 2))
# create average time dataset
avg_time <- act |>
group_by(TUCASEID) |>
# sum time by person
summarize(total_time = sum(duration)) |>
inner_join(responder_info, by = "TUCASEID") |>
# join with map data
inner_join(fips_states) |>
# group by state
group_by(ID, geom) |>
# average time by location
summarize(time = mean(total_time)) |>
mutate(State = str_to_title(ID)) |>
# add earnings data
inner_join(table_map_data) |>
select(State, time, mean_age,
mean_earnings, geom) |>
# round digits to 2
dplyr::mutate(across(where(is.numeric), round, 2)) |>
# add tooltip text
mutate(text = paste(
"State: ", State,
"\n Mean Time: ", time,
"\n Mean Age: ", mean_age,
"\n Mean Earnings: ", mean_earnings,
sep = ""
))
# changing variable names
table_map_data <- table_map_data |>
rename("Mean Leisure Time per Day (Minutes)" = mean_time,
"Mean Age (Years)" = mean_age,
"Mean Earnings per Week (USD)" = mean_earnings)
#| label: wrangling for scatterplot
## JUSTYCE
# variables: age, time, hobbies
#Creating Age Groups for Scatter Layering
res_in<- responder_info|>
mutate(age_group = case_when(
age <= 19 ~ "Adolescence",
age>= 20 & age <30~ "Young Adult",
age>= 30 & age <= 49 ~ "Adult",
age>= 50 & age < 59 ~ "Older Adult",
age>= 60 ~ "Senior",
TRUE ~ "Unknown"),
Gender= case_when(
TESEX == 1 ~ "Male",
TESEX == 2 ~ "Female"))
res_in<- res_in|>
filter(age_group!= "Unknown")
#Pull Out activities 12, 13, and 15 as their own values for column
actrevamp<- act|>
mutate(actcategory = case_when(
str_starts(activity, "12") ~ "Leisure",
str_starts(activity, "13") ~ "Sports/Recreation",
str_starts(activity, "15") ~ "Volunteerism",
TRUE ~ "Other"
))
#Combine actvamp & res_in
layeredfile<- res_in|>
inner_join(actrevamp, by= "TUCASEID")
#Create a data frame for Each Category
# 12 = socializing, relaxing, leisure
# 13 = sports, exercise, recreation
# 15 = volunteer activities
#Second Tier Breakdown
activities_expressed<- layeredfile|>
mutate(activity_involved= str_sub(activity, 1, 4),
activity_involvedname = case_when(
str_starts(activity_involved, "1201") ~ "Socializing/Communicating",
str_starts(activity_involved, "1202") ~ "Addtening/Hosting Social Events",
str_starts(activity_involved, "1203") ~ "Relaxing/Leisure",
str_starts(activity_involved, "1204") ~ "Arts/Entertainment",
str_starts(activity_involved, "1301") ~ "Participating in Sports/Excerise/Recreation",
str_starts(activity_involved, "1302") ~ "Attending Sporting/Recreation Events",
str_starts(activity_involved, "1501") ~ "Administrative & Support Activities",
str_starts(activity_involved, "1502") ~ "Social Service & Care Activities (Except Medical)",
str_starts(activity_involved, "1503") ~ "Indoor & Outdoor Maintenance, Building, & Clean-up Activities",
str_starts(activity_involved, "1504") ~ "Participating in Performance & Cultural Activities
",
str_starts(activity_involved, "1505") ~ "Other",
str_starts(activity_involved, "1506") ~ "Public Health & Safety Activities",
TRUE ~ "Other"))
#Third Tier Breakdown
fullfile<- activities_expressed|>
mutate(activity_3rd= str_sub(activity, 1, 6),
thirdtier = case_when(
str_starts(activity, "120101") ~ "Attending/Hosting Social Events with Others",
str_starts(activity, "120201") ~ "Attending or hosting parties/receptions/ceremonies",
str_starts(activity, "120301") ~ "Relaxing/Lounging",
str_starts(activity, "120303") ~ "Television and movies",
str_starts(activity, "120305") ~ "Listening to the radio",
str_starts(activity, "120306") ~ "Listening to/playing music",
str_starts(activity, "120307") ~ "Playing games",
str_starts(activity, "120308") ~ "Computer Use",
str_starts(activity, "120309") ~ "Arts and crafts as a hobby",
str_starts(activity, "120310") ~ "Collecting",
str_starts(activity, "120312") ~ "Leisure Reading",
str_starts(activity, "120313") ~ "Leisure Writing",
str_starts(activity, "120401") ~ "Attending performing arts",
str_starts(activity, "120402") ~ "Attending museums",
str_starts(activity, "120403") ~ "Gambling",
str_starts(activity, "130101") ~ "Aerobicss",
str_starts(activity, "130102") ~ "Baseball",
str_starts(activity, "130103") ~ "Basketball",
str_starts(activity, "130104") ~ "Biking",
str_starts(activity, "130105") ~ "Billards",
str_starts(activity, "130106") ~ "Boating",
str_starts(activity, "130107") ~ "Bowling",
str_starts(activity, "130108") ~ "Climbing/Caving",
str_starts(activity, "130109") ~ "Dancing",
str_starts(activity, "130110") ~ "Equestrian sports",
str_starts(activity, "130111") ~ "Fencing",
str_starts(activity, "130112") ~ "Fishing",
str_starts(activity, "130113") ~ "Football",
str_starts(activity, "130114") ~ "Golfing",
str_starts(activity, "130115") ~ "Gymnastics",
str_starts(activity, "130116") ~ "Hiking",
str_starts(activity, "130117") ~ "Hockey",
str_starts(activity, "130118") ~ "Hunting",
str_starts(activity, "130119") ~ "Martial Arts",
str_starts(activity, "130120") ~ "Racquet Sports",
str_starts(activity, "130121") ~ "Rodeo",
str_starts(activity, "130122") ~ "Rollerblading",
str_starts(activity, "130123") ~ "Rugby",
str_starts(activity, "130124") ~ "Running",
str_starts(activity, "130125") ~ "Skiing/Ice Skating/Snowboarding",
str_starts(activity, "130126") ~ "Soccer",
str_starts(activity, "130127") ~ "Softball",
str_starts(activity, "130129") ~ "Vehicle Touring/Racing",
str_starts(activity, "130130") ~ "Volleyball",
str_starts(activity, "130131") ~ "Walking",
str_starts(activity, "130132") ~ "Water Sports",
str_starts(activity,"130128")|
str_starts(activity,"130133")|
str_starts(activity,"130134") ~ "Gym",
str_starts(activity, "130135") ~ "Wrestling",
str_starts(activity, "130136") ~ "Yoga",
str_starts(activity, "130201") ~ "Watching aerobics",
str_starts(activity, "130202") ~ "Watching baseball",
str_starts(activity, "130203") ~ "Watching basketball",
str_starts(activity, "130204") ~ "Watching biking",
str_starts(activity, "130205") ~ "Watching billiards",
str_starts(activity, "130206") ~ "Watching boating",
str_starts(activity, "130207") ~ "Watching bowling",
str_starts(activity, "130208") ~ "Watching climbing, spelunking, caving",
str_starts(activity, "130209") ~ "Watching dancing",
str_starts(activity, "130210") ~ "Watching equestrian sports",
str_starts(activity, "130211") ~ "Watching fencing",
str_starts(activity, "130212") ~ "Watching fishing",
str_starts(activity, "130213") ~ "Watching football",
str_starts(activity, "130214") ~ "Watching golfing",
str_starts(activity, "130215") ~ "Watching gymnastics",
str_starts(activity, "130216") ~ "Watching hockey",
str_starts(activity, "130217") ~ "Watching martial arts",
str_starts(activity, "130218") ~ "Watching racquet sports",
str_starts(activity, "130219") ~ "Watching rodeo competitions",
str_starts(activity, "130220") ~ "Watching rollerblading",
str_starts(activity, "130221") ~ "Watching rugby",
str_starts(activity, "130222") ~ "Watching running",
str_starts(activity, "130223") ~ "Watching skiing, ice skating, snowboarding",
str_starts(activity, "130224") ~ "Watching soccer",
str_starts(activity, "130225") ~ "Watching softball",
str_starts(activity, "130226") ~ "Watching vehicle touring/racing",
str_starts(activity, "130227") ~ "Watching volleyball",
str_starts(activity, "130228") ~ "Watching walking",
str_starts(activity, "130229") ~ "Watching water sports",
str_starts(activity, "130230")|
str_starts(activity, "130231") ~ "Watching people working out, unspecified",
str_starts(activity, "130232") ~ "Watching wrestling",
#Creating Volunteer Activities
str_starts(activity, "150101") ~ "Computer use",
str_starts(activity, "150102") ~ "Organizing and preparing",
str_starts(activity, "150103") ~ "Reading",
str_starts(activity, "150105") ~ "Writing",
str_starts(activity, "150105") ~ "Fundraising",
str_starts(activity, "150201") ~ "Food preparation, presentation, clean-up",
str_starts(activity, "150202") ~ "Collecting & delivering clothing & other goods",
str_starts(activity, "150203") ~ "Providing care",
str_starts(activity, "150204") ~ "Teaching, leading, counseling, mentoring",
str_starts(activity, "150301") ~ "Building houses, wildlife sites, & other structures",
str_starts(activity, "150302") ~ "Indoor & outdoor maintenance, repair, & clean-up",
str_starts(activity, "150401") ~ "Performing",
str_starts(activity, "150402") ~ "Serving at volunteer events & cultural activities",
str_starts(activity, "150601") ~ "Public health activities
",
str_starts(activity, "150602") ~ "Public safety activities",
))
#remove unnecessay information
#There are two many other removing them makes sense
fullfile<- fullfile|>
filter(thirdtier !="Other",
activity_involvedname != "Other")
#| label: wrangling for table
## BEN
# variables: locations, time, breakdown of hobbies
##Should rename variable, but just adds state as an attached variable to TUCASEID
a <- atuscps_2023 |>
select(TUCASEID, GESTFIPS) |>
rename(state = GESTFIPS)
##Uses Datasets within Scatterplot Wrangling up to activities_expressed
##Maps States to activities and duration of different activities
table_data <- activities_expressed |>
inner_join(a, by = "TUCASEID") |>
mutate(state_name = case_when(
state == "1" ~ "AL",
state == "2" ~ "AK",
state == "3" ~ "",
state == "4" ~ "AZ",
state == "5" ~ "AR",
state == "6" ~ "CA",
state == "7" ~ "",
state == "8" ~ "CO",
state == "9" ~ "CT",
state == "10" ~ "DE",
state == "11" ~ "DC",
state == "12" ~ "FL",
state == "13" ~ "GA",
state == "14" ~ "",
state == "15" ~ "HI",
state == "16" ~ "ID",
state == "17" ~ "IL",
state == "18" ~ "IN",
state == "19" ~ "IA",
state == "20" ~ "KS",
state == "21" ~ "KY",
state == "22" ~ "LA",
state == "23" ~ "ME",
state == "24" ~ "MD",
state == "25" ~ "MA",
state == "26" ~ "MI",
state == "27" ~ "MN",
state == "28" ~ "MS",
state == "29" ~ "MO",
state == "30" ~ "MT",
state == "31" ~ "NE",
state == "32" ~ "NV",
state == "33" ~ "NH",
state == "34" ~ "NJ",
state == "35" ~ "NM",
state == "36" ~ "NY",
state == "37" ~ "NC",
state == "38" ~ "ND",
state == "39" ~ "OH",
state == "40" ~ "OK",
state == "41" ~ "OR",
state == "42" ~ "PA",
state == "43" ~ "",
state == "44" ~ "RI",
state == "45" ~ "SC",
state == "46" ~ "SD",
state == "47" ~ "TN",
state == "48" ~ "TX",
state == "49" ~ "UT",
state == "50" ~ "VT",
state == "51" ~ "VA",
state == "52" ~ "",
state == "53" ~ "WA",
state == "54" ~ "WV",
state == "55" ~ "WI",
state == "56" ~ "WY"
) ) |>
group_by(state_name, activity_involvedname) |>
summarize(new_duration = sum(duration)) |>
pivot_wider(names_from = activity_involvedname, values_from = new_duration, values_fill = 0)
#| label: save final objects
save(states, avg_time, fullfile, table_data, table_map_data, file = "american-hobbies/data/final_data.Rdata")
runApp()
?theme
?bs_theme
runApp()
runApp()
?bs_themer
## user interface
ui <- page_navbar(
theme = bs_theme(bootswatch = "flatly"),
title = "American Hobbies",
nav_panel(
title= "Home Explore Page" #adding more to during/after class
),
nav_panel(
title = "Hobbies Scatterplot",
layout_sidebar(
sidebar = sidebar(
selectInput("hobbs", "Choose a Hobby:", choices = unique(fullfile$Hobbies)),
sliderInput("max", "Max Number of Responders:", min = 1, max = nrow(fullfile), value = 15000)),
card(
plotOutput(outputId = "scatter")
),
card(
plotOutput(outputId = "scatter2")
)
)
),
nav_panel(
title = "Table",
layout_sidebar(
sidebar = sidebar(
selectizeInput(inputId = "state"
, label = "Choose one or more states:"
, choices = state_choices
, selected = "IL"
, multiple = TRUE)
),
card(
DT::dataTableOutput(outputId = "table")
)
)
),
nav_panel(
title = "Map",
card(
plotlyOutput(outputId = "map")
),
card(
DT::dataTableOutput(outputId = "table_map")
)
),
nav_panel(
title = "About",
h3("Purpose", style = "color: blue;"),
p("The purpose of this project is to see how people spend their time on various leisure activities across different locations, age groups, and tax brackets.
Leisure activities are defined within the categories of socializing, relaxing, leisure, sports, exercise, recreation, and volunteering."),
h3("Datasets", style = "color: blue;"),
p("Data was collected from the 2023 American Time Use Survey, a federally administered, continuous survey on time use in the U.S.
Respondents were randomly selected from households that have completed interviews for the Current Population Survey.
Information on labor force status, earnings, age, sex, location, and various activities were collected.
Additionally, the CBSA to FIPS dataset was used to map locations."),
h3("References", style = "color: blue;"),
HTML(paste(tags$a(href = "https://www.bls.gov/tus/data/datafiles-2023.html", "American Time Use Survey"))),
HTML(paste(tags$a(href = "https://www.nber.org/research/data/census-core-based-statistical-area-cbsa-federal-information-processing-series-fips-county-crosswalk",
"CBSA to FIPS"))),
h3("Team Memebers", style = "color: blue;"),
p(HTML("Gloria Wu <br>
Justyce Williams <br>
Ben Snyderman <br>")
))
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
